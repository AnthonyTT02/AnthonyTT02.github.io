{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","liked","allPosts","React","createElement","className","SearchPanel","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","term","onUpdateSearch","bind","_assertThisInitialized","_inherits","_createClass","key","value","e","target","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","_this2","map","_this2$props","filter","onFilterSelect","clazz","concat","onClick","PostListItem","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","items","id","done","important","like","onToggleDone","index","findIndex","item","oldItem","newItem","_objectSpread","_toConsumableArray","slice","PostList","posts","onDelete","onToggleImportant","onToggleLiked","elements","itemProps","_objectWithoutProperties","Object","assign","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","elem","body","_ref2","_ref3","old","_ref4","_ref5","indexOf","_this$state","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8286831c.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css'\r\n\r\n// Funktsionaalne komponent rakenduse päise loomiseks\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Sisesta oma nimi siia</h1>\r\n            <h2>{allPosts} plaadid, meeldisid {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    // Funktsioon otsinguvälja väärtuse uuendamiseks\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term); // Käivitab otsingu vanemkomponendis\r\n    }\r\n\r\n    // Funktsioon renderdamiseks\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Otsi kirjete järgi\"\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;\r\n","import React, {Component} from 'react';\r\n\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Nupud, mida kasutatakse postituste filtreerimiseks\r\n        this.buttons = [\r\n            {name: 'all', label: 'Kõik'},\r\n            {name: 'like', label: 'Meeldis'}\r\n        ];\r\n    }\r\n\r\n    // Funktsioon renderdamiseks\r\n    render() {\r\n\r\n        // Loob nupud, mille abil saab postitusi filtreerida\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type='button'\r\n                    className={`btn ${clazz}`}\r\n                    key={name}\r\n                    onClick={() => onFilterSelect(name)}>\r\n                    {label}</button>\r\n            )\r\n        });\r\n\r\n        // Tagastab nupugrupi komponenti renderdatud kujul\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, { Component } from 'react';\r\nimport './post-list-item.css'\r\n\r\nexport default class PostListItem extends Component {\r\n    state = {\r\n        items: [\r\n            { id: 1, label: 'Сделать задание', done: false, important: false, like: false },\r\n            { id: 2, label: 'Купить продукты', done: false, important: false, like: false },\r\n            \r\n        ]\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ items }) => {\r\n            const index = items.findIndex(item => item.id === id);\r\n            const oldItem = items[index];\r\n            const newItem = { ...oldItem, done: !oldItem.done }; \r\n\r\n            const newItems = [\r\n                ...items.slice(0, index),\r\n                newItem,\r\n                ...items.slice(index + 1)\r\n            ];\r\n\r\n            return {\r\n                items: newItems\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"post-list\">\r\n                {this.state.items.map(item => (\r\n                    <PostListItem\r\n                        key={item.id}\r\n                        label={item.label}\r\n                        done={item.done}\r\n                        important={item.important}\r\n                        like={item.like}\r\n                        onToggleDone={() => this.onToggleDone(item.id)}\r\n                        \r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item';\r\nimport './post-list.css';\r\n\r\n// Funktsionaalne komponent postituste loendi kuvamiseks\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    // Loob iga postituse jaoks listi elemendi\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <PostListItem\r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    // Funktsioon kogu loendi renderdamiseks\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;\r\n","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\n\r\nimport './post-add-form.css'\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    // Funktsioon sisestusvälja väärtuse muutmiseks\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n\r\n    // Funktsioon vormi saatmise käsitlemiseks\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text); // Lisab uue postituse\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    // Funktsioon vormi renderdamiseks\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Mille kohta te mõtlete praegu?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Lisada\r\n                    </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                { label: 'Lähen Reacti õppima', important: true, like: false, done: false, id: 1 },\r\n                { label: 'See on nii hea', important: false, like: false, done: false, id: 2 },\r\n                { label: 'Ma vajan pausi...', important: false, like: false, done: false, id: 3 }\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onToggleDone = this.onToggleDone.bind(this);  // Новый обработчик\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.maxId = 4;\r\n    }\r\n\r\n    // Функция удаления поста по ID\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n            return { data: newArr };\r\n        });\r\n    }\r\n\r\n    // Функция добавления нового поста\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            like: false,\r\n            done: false,  // Состояние done по умолчанию\r\n            id: this.maxId++\r\n        };\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem];\r\n            return { data: newArr };\r\n        });\r\n    }\r\n\r\n    // Функция переключения состояния \"important\"\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = { ...old, important: !old.important };\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return { data: newArr };\r\n        });\r\n    }\r\n\r\n    // Функция переключения состояния \"like\"\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = { ...old, like: !old.like };\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return { data: newArr };\r\n        });\r\n    }\r\n\r\n    \r\n    // Функция переключения состояния \"done\"\r\n onToggleDone(id) {\r\n     this.setState(({ data }) => {\r\n         const index = data.findIndex(item => item.id === id);\r\n         const oldItem = data[index];\r\n         const newItem = { ...oldItem, done: !oldItem.done }; // Меняем состояние done\r\n\r\n         const newData = [\r\n             ...data.slice(0, index),\r\n             newItem,\r\n             ...data.slice(index + 1)\r\n         ];\r\n\r\n         return {\r\n             data: newData\r\n         };\r\n     });\r\n }\r\n\r\n    \r\n\r\n    // Функция поиска постов\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter(item => item.label.indexOf(term) > -1);\r\n    }\r\n\r\n    // Функция фильтрации постов\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like);\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    // Функция обновления поиска\r\n    onUpdateSearch(term) {\r\n        this.setState({ term });\r\n    }\r\n\r\n    // Функция выбора фильтра\r\n    onFilterSelect(filter) {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    // Функция рендеринга\r\n    render() {\r\n        const { data, term, filter } = this.state;\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader liked={liked} allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter filter={filter} onFilterSelect={this.onFilterSelect} />\r\n                </div>\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                    onToggleDone={this.onToggleDone}  // Передаем обработчик\r\n                />\r\n                <PostAddForm onAdd={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}